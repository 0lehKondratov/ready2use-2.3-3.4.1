version: "3.9"
volumes:
  cmdbuild-db:
    external: true
  cmdbuild-tomcat:
    external: true
  nginx_conf:
    external: true
  letsencrypt_certs:
    external: true
  certbot_acme_challenge:


services:
    cmdbuild_db:
        build: ./postgres
        image: olehkondratov/cmdbuild:db-12
        container_name: cmdbuild_db
        volumes:
            - cmdbuild-db:/var/lib/postgresql
        ports:
            - 5432:5432
        environment:
            PGDATA: "/var/lib/postgresql/data/pgdata"
            POSTGRES_DB: test_data
            POSTGRES_USER: postgres
            POSTGRES_PASS: postgres
        restart: always
        mem_limit: 1000m
        mem_reservation: 300m

    cmdbuild_app:
        build: .
        image: olehkondratov/ready2use-2.3-3.4.1:latest
        container_name: cmdbuild_app
        links:
           - cmdbuild_db
        depends_on:
           - cmdbuild_db
        ports:
            - 8090:8080
        restart: always
        volumes:
            - cmdbuild-tomcat:/usr/local/tomcat
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASS=postgres
            - POSTGRES_PORT=5432
            - POSTGRES_HOST=cmdbuild_db
            - POSTGRES_DB=cmdbuild_r2u2
            - CMDBUILD_DUMP=demo.dump.xz
           #- CMDBUILD_DUMP=archiwum.dump.xz
            - JAVA_OPTS=-Xmx4000m -Xms2000m
        mem_limit: 4000m
        mem_reservation: 2000m

    cmdbuild_nginx:
        build: ./nginx
        image: olehkondratov/nginx:1.23.3
        container_name: cmdbuild_nginx
        env_file:
          - config.env
        volumes:
        - nginx_conf:/etc/nginx/sites
        - letsencrypt_certs:/etc/letsencrypt
        - certbot_acme_challenge:/var/www/certbot
        - ./vhosts:/etc/nginx/vhosts
        - ./html:/var/www/html
        ports:
        - "80:80"
        - "443:443"
        restart: always

    cmdbuild_certbot:
      build: ./certbot
      image: olehkondratov/certbot:v2.2.0
      container_name: cmdbuild_certbot
      env_file:
        - ./config.env
      volumes:
        - letsencrypt_certs:/etc/letsencrypt
        - certbot_acme_challenge:/var/www/certbot
  
    cmdbuild_cron:
      build: ./cron
      image: olehkondratov/cron:3.17.1
      container_name: cmdbuild_cron
      environment:
        COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./:/workdir:ro
      restart: unless-stopped
